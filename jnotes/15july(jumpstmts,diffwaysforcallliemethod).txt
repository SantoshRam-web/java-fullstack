3) Jump statement
=================
Jump statement is used to jump from one section of code to another section.

We have three jump statements in java.

i) break stmt 

ii) continue stmt 

iii) return stmt 

i) break stmt
=============
It is used to break the execution of loops and switch case.

For conditional statement we can use if condition.

syntax:
------
	break; 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		break;
		
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E  break outside switch or loop

ex:
----
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		if(true)
		{
			break;
		}
		
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E  break outside switch or loop


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				break;
			}
			System.out.print(i+" ");//1 2 3 4 
		}
	}
}



ii) continue stmt 
==================
A continue statement is used to continue the execution of loops.

For conditional statements we can use if condition.

syntax:
-------
	continue;

ex:
--
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		continue;
		
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E continue outside of loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		if(true)
		{
			continue;
		}
		
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E continue outside of loop


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				continue;
			}
			
			System.out.print(i+" "); // 1 2 3 4 6 7 8 9 10
		}
	}
}

iii) return stmt 
-----------------
It is used to exist from the method.
It contains optional value.

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		display(100);
		//display(103);
		//display(108);
		//display(5);
	}
	public static void display(int option)
	{
		if(option==100)
			System.out.println("It is police number");
		else if(option==103)
			System.out.println("It is enquiry number");
		else if(option==108)
			System.out.println("It is emergency number");
		else
			return;
		
	}
}


Various ways to declare the methods in java
============================================
There are four ways to declare methods in java.

1) No returntype with No argument method 

2) No returntype with Argument method 

3) With returntype with No argument method 

4) With returntype with Argument method


1) No returntype with No argument method 
========================================
If we don't have arguments then we need to ask input values inside callie method.


Q) Write a java program to perform sum of two numbers using no returntype with no argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		sum();
	}
	//callie method 
	public static void sum()
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt();
		
		int c = a + b;
		
		System.out.println("Sum of two numbers is ="+c);
	}
}

Q) Write a java program to perform cube of a given number with no returntype with no argument method?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		find();
	}
	//callie method 
	public static void find()
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n = sc.nextInt();
		
		int cube = (int)Math.pow(n,3);
		
		System.out.println("Cube of a given number is ="+cube);
	}
}

2) No returntype with Argument method 
======================================
If we have arguments then we need to ask input values inside main method.

Here arguments depend upon number of inputs.


Q) Write a java program to perform sum of two numbers using no returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt(); // 10
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt(); // 20 
		
		//caller method 
		sum(a,b);
		
	}
	//callie method 
	public static void sum(int a,int b)
	{
		int c = a + b;
		System.out.println("sum of two numbers is ="+c);
	}
}

Q) Write a java program to check given number is even or odd using no returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n = sc.nextInt(); // 5 
		
		//caller method 
		check(n);
		
	}
	//callie method 
	public static void check(int n)
	{
		if(n%2==0)
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
	}
}

3) With returntype with No argument method 
==========================================
At a time we can return only one value.

A returntype is completely depend upon output datatype.

Q) Write a java program to perform sum of two numbers using with returntype with no argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		int k = sum();
		System.out.println("Sum of two numbers is ="+k);
		
	}
	//callie method 
	public static int sum()
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt();
		
		int c = a + b;
		
		return c;
	}
}

Q) Write a java program to find out area of a circle using with returntype with no argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		double k = circle();
		System.out.printf("Area of a circle is =%.2f",k);
	}
	//callie method 
	public static double circle()
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the radius :");
		int r = sc.nextInt();
		
		//logic 
		double area = Math.PI*Math.pow(r,2);
		
		return area;
	}
}



4) With returntype with Argument method
========================================

Q) Write a java program to perform sum of two numbers using with returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt();//5
		
		System.out.println("Enter the second numbe :");
		int b = sc.nextInt();//10
		
		//caller method 
		System.out.println("sum of two numbers is ="+sum(a,b));
		
	}
	//callie method 
	public static int sum(int a,int b)
	{
		int c = a + b;
		
		return c;
	}
}

Q) Write a java program to check given number is even or odd using with returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number :");
		int n = sc.nextInt(); // 6
		
		//caller method 
		if(find(n))
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
	}
	//callie method 
	public static boolean find(int n)
	{
		if(n%2==0)
			return true;
		else
			return false;
	}
}

Assignment 
===========
Q) Write a java program to check given number is palindrome or not?







































