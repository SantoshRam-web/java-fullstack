3) Method local inner class 
===========================
Sometimes we will declare a class inside a method such type of class is called method local inner class.

The main objective method local inner class is to define method specific required repeated functionality.

Method local inner class we can access within the method but not outside the method.

ex:
--
class Outer 
{
	public void  methodOne()
	{
			class Inner 
			{
				public void sum(int a,int b)
				{
					System.out.println(a+b);
				}
			}
			
			Inner i = new Inner();
			i.sum(10,20);
			i.sum(100,200);
			i.sum(1000,2000);
	}
	public static void main(String[] args) 
	{
		Outer o = new Outer();
		o.methodOne();
	}
}

4) Anonymous inner class 
========================
Sometimes we will declare a class without name such type of inner class is called anonymous inner class.

The main objective of anonymous inner class is "just for instance use".

ex:
---
interface A 
{
	void m1();
}
class Test 
{
	public static void main(String[] args)
	{
		A a = new A()
		{
			public void m1()
			{
				System.out.println("M1-Method");
			}
		};
		a.m1();
	}
}

ex:
---
class Course 
{
	public void  details()
	{
		System.out.println("Java Course");
	}
}
class Test 
{
	public static void main(String[] args)
	{
		Course c = new Course()
		{
			public void  details()
			{
				System.out.println("Full Stack Java Course");
			}
		};
		c.details();
	}
}


Types of objects
================
We have two types of objects in java.

1) Immutable object

2) Mutable object 

1) Immutable object
--------------------
After object creation if we perform any changes then for every change a new object will be created such type of object is called immutable object.
ex:
	String and Wrapper classes 

2) Mutable object
-----------------
After object creation if we perform any changes then all the required changes will be done in a single object such type of object is called mutable object.
ex:
	StringBuffer and StringBuilder 





String 
=======
It is a collection of characters which is enclosed in a double quotation.

Once if we create a String object we can't perform any changes if we perform any changes then for every change a new object will be created such behaviour is called immutability of an object.

Diagram: class36.1


Q) What is the difference between  == and .equals() method?

==
----
It is used for address comparision or reference comparision.
It is applicable for object types and primitive types.

ex:


class Test 
{
	public static void main(String[] args)
	{
		String s1 = new String("ihub");
		
		String s2 = new String("ihub");
		
		System.out.println(s1==s2); // false 

	}
}


.equals()
---------
It is used for content comparision and it is a case sensitive
It is applicable only for object types.

ex:
---

class Test 
{
	public static void main(String[] args)
	{
		String s1 = new String("ihub");
		
		String s2 = new String("ihub");
		
		System.out.println(s1.equals(s2)); // true 

	}
}

Once if we create a String object two objects will be created . One is on heap and another is on SCP (String Constant Pool) area but reference always points to heap area.

Diagram: class36.2

Object creation in SCP area is always optional. First JVM will check is there any object is created with same content or not. If it is created then JVM simply refers to that object. If it is not created then JVM will create a new object. Hence there is no chance of having duplicate objects in SCP area.

Garbage collector can't access objects of SCP area even though they don't have any reference.

SCP objects will destroy automatically whenever JVM shutdowns or terminated.

Diagram: class36.3


Interning of String object 
==========================
With the help of heap object reference if we need corresponding SCP object reference then we need to use intern() method.

Diagram: class36.4


String important methods 
=======================
Q) Write a java program to find out length of a string?


class Test 
{
	public static void main(String[] args)
	{
		String str = "ihubtalent";
		System.out.println(str.length()); // 10
	}
}

Q) Write a java program to convert lowercase string to uppercase string?


class Test 
{
	public static void main(String[] args)
	{
		String str = "ihubtalent";
		
		str = str.toUpperCase();
		
		System.out.println(str); // IHUBTALENT
	}
}


Q) Write a java program to convert uppercase string to lowercase string?


class Test 
{
	public static void main(String[] args)
	{
		String str = "IHUBTALENT";
		
		str = str.toLowerCase();
		
		System.out.println(str); // ihubtalent
	}
}


Q) Write a java program to check both strings is equals to not?


class Test 
{
	public static void main(String[] args)
	{
		String str1="ihub";
		String str2="talent";
		
		System.out.println(str1.equals(str2)); // false 
		
		System.out.println(str1.equals("ihub")); // true 
		
		System.out.println(str1.equalsIgnoreCase("IHUB")); // true  
	}
}

Q) Write a java program to concatinate two strings?

input:
	ihub
	talent
output:
	ihubtalent

ex:
---

class Test 
{
	public static void main(String[] args)
	{
		String str1="ihub";
		String str2="talent";
		String result = str1.concat(str2); 
		System.out.println(result);
	}
}


Q) Write a java program to display the string character by character?

input:
	hello 

output:
	h
	e
	l
	l
	o 

ex:
---

class Test 
{
	public static void main(String[] args)
	{
		String str="hello";
	
		for(int i=0;i<str.length();i++)
		{
			System.out.println(str.charAt(i));
		}
		
	}
}

ex:
---

class Test 
{
	public static void main(String[] args)
	{
		String str=" ihub talent ";
	
		str = str.trim();
		
		System.out.println(str);
		
	}
}


Q) Write a java program to remove special characters from given string?

input:
	Ih@ub_Ta#le&n$t12

Output:
	IhubTalent12


class Test 
{
	public static void main(String[] args)
	{
		String str="Ih@ub_Ta#le&n$t12";
		
		str = str.replaceAll("[^A-Za-z0-9]","");
		
		System.out.println(str);
	}
}


Q) Write a java program to remove spaces from given string?

input:
	str = "  I hub Ta le nt  "

output:
	IhubTalent


class Test 
{
	public static void main(String[] args)
	{
		String str="  I hub Ta le nt  ";
		
		//str = str.replaceAll(" ","");
		
		str = str.replaceAll("\\s","");
		
		System.out.println(str);
	}
}

Q) Write a java program to continate two strings?

input:
	ihub12
	talent28
output:
	ihubtalent40


class Test 
{
	public static void main(String[] args)
	{
		String str1="ihub12";
		String str2="talent28";

		String word1=str1.replaceAll("[^A-Za-z]","");
		int num1 = Integer.parseInt(str1.replaceAll("[^0-9]",""));
			
		String word2=str2.replaceAll("[^A-Za-z]","");
		int num2 = Integer.parseInt(str2.replaceAll("[^0-9]",""));
		
		int num = num1+num2;
		String word = word1+word2;
		
		System.out.println(word+num);
	}
}





























